$Type: Microflows$Nanoflow
AllowedModuleRoles:
- FeedbackModule.User
Documentation: ""
Excluded: false
ExportLevel: Hidden
MarkAsUsed: false
MicroflowReturnType:
  $Type: DataTypes$VoidType
Name: ACT_Feedback_UploadImage
ObjectCollection:
  $Type: Microflows$MicroflowObjectCollection
  Objects:
  - $Type: Microflows$StartEvent
  - $Type: Microflows$EndEvent
    Documentation: ""
    ReturnValue: ""
  - $Type: Microflows$MicroflowParameter
    DefaultValue: ""
    Documentation: ""
    HasVariableNameBeenChanged: false
    IsRequired: true
    Name: Feedback
    VariableType:
      $Type: DataTypes$ObjectType
      Entity: FeedbackModule.Feedback
  - $Type: Microflows$ExclusiveSplit
    Caption: Uploaded Image?
    Documentation: ""
    ErrorHandlingType: Abort
    SplitCondition:
      $Type: Microflows$ExpressionSplitCondition
      Expression: $fileBlobURL != empty
  - $Type: Microflows$EndEvent
    Documentation: ""
    ReturnValue: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$JavaScriptActionCallAction
      ErrorHandlingType: Abort
      JavaScriptAction: FeedbackModule.JS_ToggleFeedbackAnnotateWidget
      OutputVariableName: base64ImageFromWidget
      ParameterMappings:
      - $Type: Microflows$JavaScriptActionParameterMapping
        Parameter: FeedbackModule.JS_ToggleFeedbackAnnotateWidget.fileBlobURL
        ParameterValue:
          $Type: Microflows$BasicCodeActionParameterValue
          Argument: $fileBlobURL
      UseReturnVariable: true
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$CreateVariableAction
      ErrorHandlingType: Abort
      InitialValue: '''.gif,.png,.jpg,.jpeg'''
      VariableName: mimeTypes
      VariableType:
        $Type: DataTypes$StringType
    AutoGenerateCaption: false
    BackgroundColor: Default
    Caption: MIME Types
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ExclusiveSplit
    Caption: Correct Upload Size?
    Documentation: ""
    ErrorHandlingType: Abort
    SplitCondition:
      $Type: Microflows$ExpressionSplitCondition
      Expression: $fileBlobURL != 'fileSizeNotAccepted'
  - $Type: Microflows$EndEvent
    Documentation: ""
    ReturnValue: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$ShowMessageAction
      Blocking: true
      ErrorHandlingType: Abort
      Template:
        $Type: Microflows$TextTemplate
        Parameters: null
        Text:
          $Type: Texts$Text
          Items:
          - $Type: Texts$Translation
            LanguageCode: en_US
            Text: Maximum image size allowed is 5MB.
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ExclusiveSplit
    Caption: Correct File Type?
    Documentation: ""
    ErrorHandlingType: Abort
    SplitCondition:
      $Type: Microflows$ExpressionSplitCondition
      Expression: $fileBlobURL != 'fileTypeNotAccepted'
  - $Type: Microflows$EndEvent
    Documentation: ""
    ReturnValue: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$ShowMessageAction
      Blocking: true
      ErrorHandlingType: Abort
      Template:
        $Type: Microflows$TextTemplate
        Parameters: null
        Text:
          $Type: Texts$Text
          Items:
          - $Type: Texts$Translation
            LanguageCode: en_US
            Text: Only images with format of .gif .jpg .jpeg .png are allowed
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$CreateVariableAction
      ErrorHandlingType: Abort
      InitialValue: "5"
      VariableName: fileUploadSize
      VariableType:
        $Type: DataTypes$IntegerType
    AutoGenerateCaption: false
    BackgroundColor: Default
    Caption: File size limit in MB
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$ShowMessageAction
      Blocking: true
      ErrorHandlingType: Abort
      Template:
        $Type: Microflows$TextTemplate
        Parameters: null
        Text:
          $Type: Texts$Text
          Items:
          - $Type: Texts$Translation
            LanguageCode: en_US
            Text: Upload failed, please try again.
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$ChangeAction
      ChangeVariableName: Feedback
      Commit: "Yes"
      ErrorHandlingType: Abort
      Items:
      - $Type: Microflows$ChangeActionItem
        Association: ""
        Attribute: FeedbackModule.Feedback.ImageB64
        Value: $base64ImageFromWidget
      RefreshInClient: true
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$Annotation
    Caption: The widget will convert the annotated image to base64
  - $Type: Microflows$ExclusiveSplit
    Caption: Upload Not Cancelled?
    Documentation: ""
    ErrorHandlingType: Abort
    SplitCondition:
      $Type: Microflows$ExpressionSplitCondition
      Expression: $fileBlobURL != 'uploadCancelled'
  - $Type: Microflows$EndEvent
    Documentation: ""
    ReturnValue: ""
  - $Type: Microflows$Annotation
    Caption: "Expand this annotation to read more...\r\n\r\nWhat does this JavaScript
      Action do?\r\n\r\nThis is a custom build JavaScript Action that triggers the
      file upload dialog box to open in your internet browser. \r\n\r\nDependency
      Note: \r\nThis JavaScript action should be used with the JavaScript Action called
      'JS_RevokeUploadedFileFromMemory' so that the image uploaded is removed from
      local memory :)\r\n\r\nExplanation of this JavaScript Action & Memory management.\r\n\r\nWe
      use createObjectURL() to upload and store files in local memory. We can access
      and cosume this in memory image resource via the URL path that is returned from
      the createObjectURL() method. \r\n\r\nHowever, each time you call createObjectURL(),
      a new object is created in memory, even if you've already created one for the
      same object. \r\nSo each of these must be released by calling the JS Action
      called 'JS_RevokeUploadedFileFromMemory' when you no longer need them.\r\n\r\nBrowsers
      will release object URLs automatically when the document is unloaded; however,
      for optimal performance and memory usage, if there are safe times when you can
      explicitly unload them, you should do so with the JavaScriptAction called 'JS_RevokeUploadedFileFromMemory'."
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$JavaScriptActionCallAction
      ErrorHandlingType: Abort
      JavaScriptAction: FeedbackModule.JS_RevokeUploadedFileFromMemory
      OutputVariableName: ReturnValueName
      ParameterMappings:
      - $Type: Microflows$JavaScriptActionParameterMapping
        Parameter: FeedbackModule.JS_RevokeUploadedFileFromMemory.fileBlobURL
        ParameterValue:
          $Type: Microflows$BasicCodeActionParameterValue
          Argument: $fileBlobURL
      UseReturnVariable: true
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$Annotation
    Caption: "Expand this annotation to read more....\r\n\r\nWhat does this JavaScript
      action do?\r\n\r\nAfter you have uploaded an image it removes locally stored
      image from memory. This is a custom build action.\r\n\r\nDependency Note: \r\nThis
      JavaScript action should be used only when you have inserted the Image Upload
      JavaScript Action called 'JS_UploadAndConvertToFileBlobURL' into your nanoflow.\r\n\r\nMore
      detailed explanation:  Memory management.\r\n\r\nTo upload a image we use a
      custom build Javascript action called  'JS_UploadAndConvertToFileBlobURL'.\r\nInside
      this action we use a JavaScript method called createObjectURL() to upload and
      store files in local memory. We can access and cosume this in memory image resource
      via the URL path that is returned from the createObjectURL() method. \r\n\r\nHowever,
      each time you call createObjectURL(), a new object is created in memory, even
      if you've already created one for the same object. \r\nSo each of these must
      be released by calling this action called 'JS_RevokeUploadedFileFromMemory'
      when you no longer need them.\r\n\r\nBrowsers will release object URLs automatically
      when the document is unloaded; however, for optimal performance and memory usage,
      if there are safe times when you can explicitly unload them, you should do so
      with the JavaScriptAction called 'JS_RevokeUploadedFileFromMemory'."
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$CloseFormAction
      ErrorHandlingType: Abort
      NumberOfPagesToClose: ""
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$ShowFormAction
      ErrorHandlingType: Abort
      FormSettings:
        $Type: Forms$FormSettings
        Form: FeedbackModule.ShareFeedback
        ParameterMappings: null
        TitleOverride: null
      NumberOfPagesToClose: ""
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$JavaScriptActionCallAction
      ErrorHandlingType: Abort
      JavaScriptAction: FeedbackModule.SetStorageItemObject
      OutputVariableName: ReturnValueName
      ParameterMappings:
      - $Type: Microflows$JavaScriptActionParameterMapping
        Parameter: FeedbackModule.SetStorageItemObject.Key
        ParameterValue:
          $Type: Microflows$BasicCodeActionParameterValue
          Argument: '@FeedbackModule.LocalStorageKey'
      - $Type: Microflows$JavaScriptActionParameterMapping
        Parameter: FeedbackModule.SetStorageItemObject.Value
        ParameterValue:
          $Type: Microflows$BasicCodeActionParameterValue
          Argument: $Feedback
      UseReturnVariable: true
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
  - $Type: Microflows$ActionActivity
    Action:
      $Type: Microflows$JavaScriptActionCallAction
      ErrorHandlingType: Abort
      JavaScriptAction: FeedbackModule.JS_UploadAndConvertToFileBlobURL
      OutputVariableName: fileBlobURL
      ParameterMappings:
      - $Type: Microflows$JavaScriptActionParameterMapping
        Parameter: FeedbackModule.JS_UploadAndConvertToFileBlobURL.userDefined_mimeTypes
        ParameterValue:
          $Type: Microflows$BasicCodeActionParameterValue
          Argument: $mimeTypes
      - $Type: Microflows$JavaScriptActionParameterMapping
        Parameter: FeedbackModule.JS_UploadAndConvertToFileBlobURL.userDefined_fileUploadSize
        ParameterValue:
          $Type: Microflows$BasicCodeActionParameterValue
          Argument: $fileUploadSize
      UseReturnVariable: true
    AutoGenerateCaption: true
    BackgroundColor: Default
    Caption: Activity
    Disabled: false
    Documentation: ""
ReturnVariableName: ""
