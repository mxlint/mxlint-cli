// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
    const handleUserRoles = async () => {
        if(!mx) return undefined;
        try {
            return await mx.session.getUserRoleNames();
        } catch (error){
            console.error("Error getting user role names", error);
            return undefined;
        }
    };
    const handlePagePath = async () => {
            if(!mx) return undefined;
            try {
                const mendixVersion = mx.version
                const mendixMajorVersion = mendixVersion.split('.')[0];
                switch(mendixMajorVersion) {
                    case '9':
                    case '10':
                        return mx.ui.getContentForm().path.toString();
                    default:
                        return undefined;
                };
            } catch {
                console.error("Error getting page path", error);
                return undefined
            }
    };
// END EXTRA CODE

/**
 * What does this JavaScript action do?
 * 
 * Returns meta data from the clients internet browser. 
 * 
 * This includes; 
 * 
 * ActiveUserRoles
 * PageName
 * EnvironmentURL
 * Browser
 * ScreenWidth
 * ScreenHeight
 * @param {MxObject} feedback
 * @returns {Promise.<MxObject>}
 */
export async function JS_PopulateFeedbackMetadata(feedback) {
	// BEGIN USER CODE
    try {
        const userRoles = await handleUserRoles();
        const pagePath = await handlePagePath();
        feedback.set("ActiveUserRoles", userRoles);
        feedback.set("PageName", pagePath);
        feedback.set("EnvironmentURL", window.location.href);
        feedback.set("Browser", navigator.userAgent);
        feedback.set("ScreenWidth", window.screen.width);
        feedback.set("ScreenHeight", window.screen.height);
        return feedback;
    } catch (error) {
        console.error("Error setting meta data", error);
    }
	// END USER CODE
}
